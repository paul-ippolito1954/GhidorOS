///<reference path="../globals.ts" />
/* ------------
     memory.ts
     Requires global.ts.
     ------------ */
var TSOS;
(function (TSOS) {
    class Memory {
        constructor() {
            // I will make this less disgusting another time
            // for now it works.
            this.memArray = [["00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00"],
                ["00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00"],
                ["00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00",
                    "00", "00", "00", "00", "00", "00", "00", "00"]
            ];
            // booleans to check open or loaded sections of memory
            // if true, open, if false, NOT OPEN for use
            this.section0Free = true;
            this.section1Free = true;
            this.section2Free = true;
        }
        init() {
        }
    }
    TSOS.Memory = Memory;
})(TSOS || (TSOS = {}));
//# sourceMappingURL=memory.js.map